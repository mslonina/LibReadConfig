cmake_minimum_required (VERSION 2.8)
project (libreadconfig)

set (LRC_VERSION_MAJOR 0)
set (LRC_VERSION_MINOR 12)
set (LRC_VERSION_PATCH 4)

option (BUILD_HDF5 "Build HDF5 bindings" off)
option (BUILD_DOCS "Build documentation" off)

include (CheckIncludeFiles)
include (CheckLibraryExists)
include (CheckCSourceCompiles)

CHECK_INCLUDE_FILES (stdio.h HAVE_STDIO_H)
CHECK_INCLUDE_FILES (dlfcn.h HAVE_DLFCN_H)
CHECK_INCLUDE_FILES (stdlib.h HAVE_STDLIB_H)
CHECK_INCLUDE_FILES (locale.h HAVE_LOCALE_H)
CHECK_INCLUDE_FILES (memory.h HAVE_MEMORY_H)
CHECK_INCLUDE_FILES (stdint.h HAVE_STDINT_H)
CHECK_INCLUDE_FILES (inttypes.h HAVE_INTTYPES_H)
CHECK_INCLUDE_FILES (strings.h HAVE_STRINGS_H)
CHECK_INCLUDE_FILES (string.h HAVE_STRING_H)
CHECK_INCLUDE_FILES (sys/stat.h HAVE_STAT_H)
CHECK_INCLUDE_FILES (sys/types.h HAVE_TYPES_H)
CHECK_INCLUDE_FILES (unistd.h HAVE_UNISTD_H)
CHECK_INCLUDE_FILES (popt.h HAVE_POPT_H)

CHECK_LIBRARY_EXISTS(dl dlopen "" HAVE_DLFCN_LIB)

CONFIGURE_FILE (
  ${CMAKE_CURRENT_SOURCE_DIR}/src/config.h.in 
  ${CMAKE_CURRENT_BINARY_DIR}/src/config.h
)

add_definitions (-DHAVE_CONFIG_H)
set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra -std=c99")

if (BUILD_HDF5)
  CHECK_INCLUDE_FILES (hdf5.h HAVE_HDF5_H)
  CHECK_LIBRARY_EXISTS(hdf5 H5Dopen2 "" HDF5_LIB)
  if (HDF5_LIB)
    add_definitions (-DHAVE_HDF5_H)
  endif (HDF5_LIB)
endif (BUILD_HDF5)

add_subdirectory(src)

SET (CPACK_PACKAGE_DESCRIPTION_SUMMARY "Library for reading/writing config files")
SET (CPACK_PACKAGE_VENDOR "Celestial Mechanics Group, Torun Centre for Astronomy, NCU")
SET (CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE.txt")
SET (CPACK_RESOURCE_FILE_README "${CMAKE_CURRENT_SOURCE_DIR}/README.txt")
SET (CPACK_PACKAGE_VERSION_MAJOR "${LRC_VERSION_MAJOR}")
SET (CPACK_PACKAGE_VERSION_MINOR "${LRC_VERSION_MINOR}")
SET (CPACK_PACKAGE_VERSION_PATCH "${LRC_VERSION_PATCH}")
SET (CPACK_SOURCE_PACKAGE_FILE_NAME
  "${CMAKE_PROJECT_NAME}-${LRC_VERSION_MAJOR}.${LRC_VERSION_MINOR}.${LRC_VERSION_PATCH}")
SET (CPACK_PACKAGE_INSTALL_DIRECTORY "/usr/local")
SET (CPACK_SOURCE_IGNORE_FILES
  "/build/;/.DS_Store;/.gitignore;/.git/;~$;${CPACK_SOURCE_IGNORE_FILES}")

include (CPack)

add_custom_target(dist COMMAND ${CMAKE_MAKE_PROGRAM} package_source)
